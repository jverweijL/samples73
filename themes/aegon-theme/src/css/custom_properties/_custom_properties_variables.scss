// Buttons colors

$custom-properties-button-colors: ();
$custom-properties-button-colors: map-merge(
	(
		primary: $btn-primary,
		outline-primary: $btn-outline-primary,
		secondary: $btn-secondary,
		outline-secondary: $btn-outline-secondary,
		link: $btn-link,
	),
	$custom-properties-button-colors
);
$custom-properties-button-maps: ();

// Container max widths

$custom-properties-container-max-widths: ();
$custom-properties-container-max-widths: map-merge(
	(
		sm: var(--container-max-sm),
		md: var(--container-max-md),
		lg: var(--container-max-lg),
		xl: var(--container-max-xl),
	),
	$custom-properties-container-max-widths
);

// Spacers map copy

$custom-properties-spacers: ();
$custom-properties-spacers: map-merge(
	(
		0: var(--spacer-0),
		1: var(--spacer-1),
		2: var(--spacer-2),
		3: var(--spacer-3),
		4: var(--spacer-4),
		5: var(--spacer-5),
		6: var(--spacer-6),
		7: var(--spacer-7),
		8: var(--spacer-8),
		9: var(--spacer-9),
		10: var(--spacer-10),
	),
	$custom-properties-spacers
);

// Theme colors

$custom-properties-theme-colors: ();
$custom-properties-theme-colors: map-merge(
	(
		danger: var(--danger),
		dark: var(--dark),
		gray-dark: var(--gray-800),
		info: var(--info),
		light: var(--light),
		lighter: var(--gray-100),
		primary: var(--primary),
		secondary: var(--secondary),
		success: var(--success),
		warning: var(--warning),
	),
	$custom-properties-theme-colors
);

// Buttons

@each $key, $map in $custom-properties-button-colors {
	$normal: ();
	$hover: ();

	:root {
		@each $status in (normal, hover) {
			$prefix: $status + '-';

			@if ($status == normal) {
				$prefix: '';
			}

			@each $prop in (background-color, border-color, color) {
				$alias: $prefix + $prop;
				$btn-variable: '';

				@if ($prop == background-color) {
					$alias: $prefix + 'bg';
				}

				@if (map-has-key($map, #{$alias})) {
					$btn-variable: map-get($map, #{$alias});
				} @else if($status == normal) {
					$btn-variable: map-get($map, #{$prop});
				} @else {
					$btn-variable: map-get(map-get($map, #{$status}), #{$prop});
				}

				@if ($btn-variable != null) {
					--btn-#{$key}-#{$prefix}#{$prop}: #{$btn-variable};

					@if ($status == normal) {
						$normal: map-merge(
							(#{$prop}: var(--btn-#{$key}-#{$prop})),
							$normal
						);
					} @else {
						$hover: map-merge(
							(#{$prop}: var(--btn-#{$key}-#{$prefix}#{$prop})),
							$hover
						);
					}
				}
			}
		}
	}

	$normal: map-merge(
		(
			hover: $hover,
			focus: $hover,
			active: $hover,
			disabled: $hover,
		),
		$normal
	);

	$custom-properties-button-maps: map-merge(
		(#{$key}: $normal),
		$custom-properties-button-maps
	);
}

:root {
	// Aspect ratios

	--aspect-ratio-4-to-3: 75%;
	--aspect-ratio-8-to-3: 37.5%;
	--aspect-ratio-16-to-9: 56.25%;
	--aspect-ratio: 100%;

	// Blockquotes

	--blockquote-font-size: #{$font-size-base} * 1.25;
	--blockquote-small-color: #{$gray-600};
	--blockquote-small-font-size: #{$small-font-size};

	// Body

	--body-bg: #{$body-bg};
	--body-color: #{$body-color};

	// Border radius

	--border-radius-circle: 50%;
	--border-radius-lg: #{$border-radius-lg};
	--border-radius-sm: #{$border-radius-sm};
	--border-radius: #{$border-radius};
	--rounded-pill: #{$rounded-pill};

	// Colors

	--black: #{$black};
	--gray-100: #{$gray-100};
	--gray-200: #{$gray-200};
	--gray-300: #{$gray-300};
	--gray-400: #{$gray-400};
	--gray-500: #{$gray-500};
	--gray-600: #{$gray-600};
	--gray-700: #{$gray-700};
	--gray-800: #{$gray-800};
	--gray-900: #{$gray-900};
	--transparent: transparent;
	--white: #{$white};

	@each $key, $value in $theme-colors {
		--#{$key}: #{$value};
	}

	// Container max

	@each $key, $value in $container-max-widths {
		--container-max-#{$key}: #{$value};
	}

	// Display

	--display1-size: #{$display1-size};
	--display2-size: #{$display2-size};
	--display3-size: #{$display3-size};
	--display4-size: #{$display4-size};

	--display1-weight: #{$display1-weight};
	--display2-weight: #{$display2-weight};
	--display3-weight: #{$display3-weight};
	--display4-weight: #{$display4-weight};

	--display-line-height: #{$display-line-height};

	// Fonts

	--font-family-base: #{$font-family-base};
	--font-family-monospace: #{$font-family-monospace};
	--font-family-sans-serif: #{$font-family-sans-serif};

	--font-size-base: #{$font-size-base};
	--font-size-lg: #{$font-size-lg};
	--font-size-sm: #{$font-size-sm};

	--font-weight-bold: #{$font-weight-bold};
	--font-weight-bolder: #{$font-weight-bolder};
	--font-weight-light: #{$font-weight-light};
	--font-weight-lighter: #{$font-weight-lighter};
	--font-weight-normal: #{$font-weight-normal};
	--font-weight-semi-bold: #{$font-weight-semi-bold};

	--line-height-base: #{$line-height-base};
	--line-height-sm: 1.15;

	// Headings

	--h1-font-size: #{$h1-font-size};
	--h2-font-size: #{$h2-font-size};
	--h3-font-size: #{$h3-font-size};
	--h4-font-size: #{$h4-font-size};
	--h5-font-size: #{$h5-font-size};
	--h6-font-size: #{$h6-font-size};

	// Lead

	--lead-font-size: #{$lead-font-size};
	--lead-font-weight: #{$lead-font-weight};

	// Portlet

	--portlet-bg: transparent;
	--portlet-content-border-radius: 0;
	--portlet-header-margin-bottom: calc(
		var(--spacer) * #{$portlet-header-margin-bottom}
	);

	--portlet-topper-bg: var(--primary);
	--portlet-topper-border: var(--portlet-topper-bg);
	--portlet-topper-border-radius: var(--border-radius-sm)
		var(--border-radius-sm) 0 0;
	--portlet-topper-color: var(--white);
	--portlet-topper-link-color: var(--portlet-topper-color);
	--portlet-topper-link-hover-color: var(--portlet-topper-link-color);

	// Separator

	--hr-border-color: #{$hr-border-color};
	--hr-border-width: #{$hr-border-width};
	--hr-margin-y: #{$hr-margin-y};

	// Shadows

	--box-shadow-lg: #{$box-shadow-lg};
	--box-shadow-sm: #{$box-shadow-sm};
	--box-shadow: #{$box-shadow};

	// Spacers

	--spacer: #{$spacer};
	@each $key, $value in $spacers {
		$multiplier: nth($value, 1) / $spacer;
		@if ($value == 0) {
			$multiplier: 0;
		}
		--spacer-#{$key}: calc(var(--spacer) * #{$multiplier});
	}

	// Text muted

	--text-muted: #{$text-muted};

	// Transitions

	--transition-collapse: #{$transition-collapse};
	--transition-fade: #{$transition-fade};
}
